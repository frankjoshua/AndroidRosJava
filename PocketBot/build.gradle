buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.2'
        classpath 'com.github.JakeWharton:sdk-manager-plugin:220bf7a88a7072df3ed16dc8466fb144f2817070'
        classpath 'io.fabric.tools:gradle:1.21.2'
        classpath 'com.google.gms:google-services:3.0.0'
    }
}

allprojects {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }
}

apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply from: 'tesseract_utils.gradle'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven {
        url "https://github.com/QuickBlox/quickblox-android-sdk-releases/raw/master/"
    }
    maven {
        url 'https://houndify.com/maven/'
    }
}

android {
    compileSdkVersion 24
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "com.tesseractmobile.pocketbot"
        //Min sdk 14 required by Quickblox
        //Sdk 15 required by Houndify
        minSdkVersion 15
        targetSdkVersion 23
        versionCode calculateVersionCode()
        versionName calculateVersionName()

        // Enabling multidex support.
        multiDexEnabled true

        //Enable Testing
        testApplicationId "com.tesseractmobile.pocketbot.test"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile file("debug.keystore")
        }
        release {
            if(rootProject.file(System.getProperty("user.home") + '/.signing/signing.properties').exists())
            {
                Properties props = new Properties()
                props.load(new FileInputStream(System.getProperty("user.home") + '/.signing/signing.properties'))
                storeFile file(System.getProperty("user.home") + '/.signing/release.keystore')
                storePassword(props.getProperty("release.password"))
                keyAlias props.getProperty("release.keyalias")
                keyPassword props.getProperty("release.password")
            }
        }
    }

    //Rename release apk with version name
    applicationVariants.all { variant ->
        if(variant.buildType.name == "release")
            variant.outputs.each { output ->
                output.outputFile = new File(
                        "release_apk",
                        output.outputFile.name.replace(".apk", "-${variant.versionName}.apk"))
            }
    }

    buildTypes {
        debug {
            minifyEnabled false //usb serial for android does not currently work with proguard
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'proguard-rules-debug.pro'
            testCoverageEnabled true
            testProguardFile 'proguard-test-rules.pro'
            versionNameSuffix "-beta"
            ext.betaDistributionGroupAliases="pocketbotbeta"
            //ext.betaDistributionGroupAliases="josh"
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE-FIREBASE.txt'
        exclude 'LICENSE.txt'
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        //Stops false positives with the % symbol
        disable "StringFormatInvalid","StringFormatMatches"
    }
}

ext {
    playServicesVersion = '9.2.1'
    supportLibVersion = '24.0.0'
    qbSdkVersion = '2.6'
}

dependencies {

    //compile project(':openCVLibrary300')
    //compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:support-v4:${supportLibVersion}"
    //compile 'com.google.android.gms:play-services:7.8.0'

    compile "com.android.support:appcompat-v7:${supportLibVersion}"
    //Firebase
    //Protobuf
    compile files('libs/protobuf-java-2.6.1.jar')
    //Crashlytics
    compile('com.crashlytics.sdk.android:crashlytics:2.5.6@aar') {
        transitive = true;
    }
    compile project(':usbSerialForAndroid')
    //Face Tracking
    compile "com.google.android.gms:play-services-vision:${playServicesVersion}"
    //User authentication
    compile "com.google.android.gms:play-services-auth:${playServicesVersion}"
    compile "com.google.android.gms:play-services-plus:${playServicesVersion}"
    //App Invites
    compile "com.google.android.gms:play-services-appinvite:${playServicesVersion}"
    //Nearby Connections - Local networking
    compile "com.google.android.gms:play-services-nearby:${playServicesVersion}"
    //RecyclerView
    compile "com.android.support:recyclerview-v7:${supportLibVersion}"
    //Testing
    testCompile 'junit:junit:4.12'
    androidTestCompile "com.android.support:support-annotations:${supportLibVersion}"
    androidTestCompile 'com.android.support.test:runner:0.4.1'
    androidTestCompile 'com.android.support.test:rules:0.4.1'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'
    //Video calling
    compile "com.quickblox:quickblox-android-sdk-core:${qbSdkVersion}@aar"
    compile("com.quickblox:quickblox-android-sdk-chat:${qbSdkVersion}@aar") {
        transitive = true
    }
    compile "com.quickblox:quickblox-android-sdk-videochat-webrtc:${qbSdkVersion}@aar"
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'ai.api:sdk:1.9.0@aar'
    compile 'commons-io:commons-io:2.4'
    compile "com.google.firebase:firebase-core:${playServicesVersion}"
    compile "com.google.firebase:firebase-database:${playServicesVersion}"
    compile "com.google.firebase:firebase-auth:${playServicesVersion}"
    compile "com.google.firebase:firebase-storage:${playServicesVersion}"
    compile 'org.altbeacon:android-beacon-library:2.+'
    compile "com.google.android.gms:play-services-auth:${playServicesVersion}"
    //Houndify
    compile ('hound.android:hound-sdk:0.2.15@aar'){
        transitive=true
    }
    compile ('hound.android:phrasespotter:1.4.0'){
        transitive=true
    }
    //Testing
    androidTestCompile 'com.android.support:support-annotations:+'
    compile 'com.android.support:support-annotations:+'
    androidTestCompile 'com.android.support.test:runner:+'
    androidTestCompile 'com.android.support.test:rules:+'
    // Optional -- UI testing with Espresso
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'
    // Required -- JUnit 4 framework
    testCompile 'junit:junit:4.12'
    androidTestCompile 'junit:junit:+'
    androidTestCompile 'tools.fastlane:screengrab:0.3.2'
}


apply plugin: 'com.google.gms.google-services'