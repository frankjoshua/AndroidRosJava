buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.0'
        classpath 'com.github.JakeWharton:sdk-manager-plugin:220bf7a88a7072df3ed16dc8466fb144f2817070'
        classpath 'io.fabric.tools:gradle:1.21.2'
        classpath 'com.google.gms:google-services:3.0.0'
    }
}

allprojects {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }
}

apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply from: 'auto-version.gradle'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven {
        url "https://github.com/QuickBlox/quickblox-android-sdk-releases/raw/master/"
    }
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "com.tesseractmobile.pocketbot"
        //Min sdk 14 required by Quickblox
        minSdkVersion 14
        targetSdkVersion 23
        versionCode calculateVersionCode()
        versionName calculateVersionName()

        // Enabling multidex support.
        multiDexEnabled true

        //Enable Testing
        testApplicationId "com.tesseractmobile.pocketbot.test"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile file("debug.keystore")
        }
        release {
        }
    }

    buildTypes {
        debug {
            minifyEnabled false //usb serial for android does not currently work with proguard
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'proguard-rules-debug.pro'
            testCoverageEnabled true
            testProguardFile 'proguard-test-rules.pro'
            versionNameSuffix "-beta"
            //ext.betaDistributionGroupAliases="pocketbotbeta"
            ext.betaDistributionGroupAliases="josh"
        }
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE-FIREBASE.txt'
        exclude 'LICENSE.txt'
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        //Stops false positives with the % symbol
        disable "StringFormatInvalid","StringFormatMatches"
    }
}

ext {
    playServicesVersion = '9.0.2'
    supportLibVersion = '23.4.0'
    qbSdkVersion = '2.5.2'
}

dependencies {

    //compile project(':openCVLibrary300')
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:support-v4:${supportLibVersion}"
    //compile 'com.google.android.gms:play-services:7.8.0'

    compile "com.android.support:appcompat-v7:${supportLibVersion}"
    //Firebase
    //Protobuf
    compile files('libs/protobuf-java-2.6.1.jar')
    //Crashlytics
    compile('com.crashlytics.sdk.android:crashlytics:2.5.6@aar') {
        transitive = true;
    }
    compile project(':usbSerialForAndroid')
    //Face Tracking
    compile "com.google.android.gms:play-services-vision:${playServicesVersion}"
    //User authentication
    compile "com.google.android.gms:play-services-auth:${playServicesVersion}"
    compile "com.google.android.gms:play-services-plus:${playServicesVersion}"
    //App Invites
    compile "com.google.android.gms:play-services-appinvite:${playServicesVersion}"
    //Nearby Connections - Local networking
    compile "com.google.android.gms:play-services-nearby:${playServicesVersion}"
    //RecyclerView
    compile "com.android.support:recyclerview-v7:${supportLibVersion}"
    //Testing
    testCompile 'junit:junit:4.12'
    androidTestCompile "com.android.support:support-annotations:${supportLibVersion}"
    androidTestCompile 'com.android.support.test:runner:0.4.1'
    androidTestCompile 'com.android.support.test:rules:0.4.1'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'
    //Video calling
    compile "com.quickblox:quickblox-android-sdk-core:${qbSdkVersion}@aar"
    compile("com.quickblox:quickblox-android-sdk-chat:${qbSdkVersion}@aar") {
        transitive = true
    }
    compile "com.quickblox:quickblox-android-sdk-videochat-webrtc:${qbSdkVersion}@aar"
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'ai.api:sdk:1.7.1@aar'
    compile 'commons-io:commons-io:2.4'
    compile "com.google.firebase:firebase-core:${playServicesVersion}"
    compile "com.google.firebase:firebase-database:${playServicesVersion}"
    compile "com.google.firebase:firebase-auth:${playServicesVersion}"
    compile 'org.altbeacon:android-beacon-library:2.+'
    compile 'com.pubnub:pubnub-android:3.7.5'
    compile "com.google.android.gms:play-services-auth:${playServicesVersion}"
    //Testing
    androidTestCompile 'com.android.support:support-annotations:+'
    compile 'com.android.support:support-annotations:+'
    androidTestCompile 'com.android.support.test:runner:+'
    androidTestCompile 'com.android.support.test:rules:+'
    // Optional -- UI testing with Espresso
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'
    // Required -- JUnit 4 framework
    testCompile 'junit:junit:4.12'
    androidTestCompile 'junit:junit:+'
}

task pushRelease(type: Exec){
    description "Calls push_release.bat with version name"
    commandLine 'cmd', '/c', 'push_release', "${calculateVersionName()}"
}

task grantPermissions(){
    description "Allows permissions to work with Marshmallow"
    def adb = android.getAdbExe().toString()
    def applicationId = "com.tesseractmobile.pocketbot"
    "${adb} shell pm grant ${applicationId} android.permission.RECORD_AUDIO".execute()
    "${adb} shell pm grant ${applicationId} android.permission.CAMERA".execute()
}

apply plugin: 'com.google.gms.google-services'